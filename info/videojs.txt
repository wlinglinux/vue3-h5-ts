
常用事件
emptied resize
this.on('suspend', function() {//延迟下载
    console.log("延迟下载")
});
this.on('loadstart', function() { //客户端开始请求数据
    console.log("客户端开始请求数据")
});
this.on('progress', function() {//客户端正在请求数据
    console.log("客户端正在请求数据")
});
this.on('abort', function() {//客户端主动终止下载（不是因为错误引起）
    console.log("客户端主动终止下载")
});
this.on('error', function() {//请求数据时遇到错误
    console.log("请求数据时遇到错误")
});
this.on('stalled', function() {//网速失速
    console.log("网速失速")
});
this.on('play', function() {//开始播放
    console.log("开始播放")
});
this.on('pause', function() {//暂停
    console.log("暂停")
});
this.on('loadedmetadata', function() {//成功获取资源长度
    console.log("成功获取资源长度")
});
this.on('loadeddata', function() {//渲染播放画面
    console.log("渲染播放画面")
});
this.on('waiting', function() {//等待数据，并非错误
    console.log("等待数据")
});
this.on('playing', function() {//开始回放
    console.log("开始回放")
});
this.on('canplay', function() {//可以播放，但中途可能因为加载而暂停
    console.log("可以播放，但中途可能因为加载而暂停")
});
this.on('canplaythrough', function() { //可以播放，歌曲全部加载完毕
    console.log("可以播放，歌曲全部加载完毕")
});
this.on('seeking', function() { //寻找中
    console.log("寻找中")
});
this.on('seeked', function() {//寻找完毕
    console.log("寻找完毕")
});
this.on('timeupdate', function() {//播放时间改变
    console.log("播放时间改变")
});
this.on('ended', function() {//播放结束
    console.log("播放结束")
});
this.on('ratechange', function() {//播放速率改变
    console.log("播放速率改变")
});
this.on('durationchange', function() {//资源长度改变
    console.log("资源长度改变")
});
this.on('volumechange', function() {//音量改变
    console.log("音量改变")
}
常用方法
播放：myPlayer.play();
暂停：myPlayer.pause();
获取播放进度：var whereYouAt = myPlayer.currentTime();
设置播放进度：myPlayer.currentTime(120);
视频持续时间，加载完成视频才可以知道视频时长，且在flash情况下无效: var howLongIsThis = myPlayer.duration();
缓冲，就是返回下载了多少: `var whatHasBeenBuffered = myPlayer.buffered();
百分比的缓冲: var howMuchIsDownloaded = myPlayer.bufferedPercent();
声音大小（0-1之间）: var howLoudIsIt = myPlayer.volume();
设置声音大小: myPlayer.volume(0.5);
取得视频的宽度: var howWideIsIt = myPlayer.width();
设置宽度：myPlayer.width(640);
获取高度: var howTallIsIt = myPlayer.height();
设置高度：: myPlayer.height(480);
一步到位的设置大小：myPlayer.size(640,480);
全屏: myPlayer.enterFullScreen();
离开全屏 : myPlayer.enterFullScreen();

(4)、网络状态
myPlayer.currentSrc; //返回当前资源的URL
myPlayer.src = value; //返回或设置当前资源的URL
myPlayer.canPlayType(type); //是否能播放某种格式的资源
myPlayer.networkState; //0.此元素未初始化 1.正常但没有使用网络 2.正在下载数据 3.没有找到资源
myPlayer.load(); //重新加载src指定的资源
myPlayer.buffered; //返回已缓冲区域，TimeRanges
myPlayer.preload; //none:不预载 metadata:预载资源信息 auto:立即加载视频
(5)、播放状态

myPlayer.currentTime = value; //当前播放的位置，赋值可改变位置
myPlayer.startTime; //一般为0，如果为流媒体或者不从0开始的资源，则不为0
myPlayer.duration; //当前资源长度 流返回无限
myPlayer.paused; //是否暂停
myPlayer.defaultPlaybackRate = value;//默认的回放速度，可以设置
myPlayer.playbackRate = value;//当前播放速度，设置后马上改变
myPlayer.played; //返回已经播放的区域，TimeRanges，关于此对象见下文
myPlayer.seekable; //返回可以seek的区域 TimeRanges
myPlayer.ended; //是否结束
myPlayer.autoPlay; //是否自动播放
myPlayer.loop; //是否循环播放
(6)、视频控制
myPlayer.controls;//是否有默认控制条
myPlayer.volume = value; //音量
myPlayer.muted = value; //静音
TimeRanges(区域)对象
TimeRanges.length; //区域段数
TimeRanges.start(index) //第index段区域的开始位置
TimeRanges.end(index) //第index段区域的结束位置